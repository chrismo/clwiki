===Change Log

====1.17.0

* (Man, this boat, she is old). Little bit of updating to the page header
  to better support css styling. To get with the times. Or at least cut
  them in half.

====1.16.0

* DST fix for Windows

====1.15.0

* ? forgot to update. Transferred over to github.

====1.14.0

* update.shebang.rb and the short-lived symlink.cgi.rb removed in favor
  of a --repair switch for install.rb which will perform 3 steps: updating
  the shebang to the local ruby executable, creating hard-linked .cgi
  extensions and chmod-ing the proper files to 0755. 
* Upgraded to rss version 2.0, added timestamp and category to feed items.
* added OPML formatter  
* Add optional RedCloth formatter, including a locally modified version of
  RedCloth.rb to workaround a compatibility issue -- this hasn't gotten
  too much love, so play with it if you want.
* Change to CVS integration. New directories were being added with the 
  full path name, now just the base name. Apprently, the old way used to
  work, but with newer CVSNT, it doesn't. Hopefully, change should still
  be compatible with normal CVS ... I believe it should be. More logging
  of cvs output, and stderr should be captured as well.
* Added option to read in a custom publishTag in as a url param for 
  blogki.rb, blogki.editor.rb, blogki.rss.rb -- changes to use the index 
  for pub tag hits should also perform better for rendering the blogki.rb
  recent changes page (main blog view). Tags no longer have to be in the
  first line of the page -- the tag is simply a search term.
* Added -bp flag to clwikiindex.rb to purge pages that only have the default
  content in them.
* Escaping brace literals in format.graphviz.digraph.rb, apparently wasn't
  a bug before, but uncovered Ruby warnings about it.
* [BUG: Local index doesn't seem to work (index never updated...)]
  Pesky saving of data in local index when an edit done is fixed. Ever since
  going to an async save with a thread it probably stopped working -- Ruby
  kills any outstanding threads when the main process is done. Now the index
  threads are registered and joined before the main process is over, which
  probably kills the whole point of the threads in the first place to try
  and return browser control back to the end-user while the index is doing
  its thang. [Fixed a non-released nil bug with the thread killer]  
* Regular wiki recent view had needless/ugly extra <br> lines in between
  entries -- this is fixed.
* New index_log_fn conf option, to allow for logging of index activity
  when Local Index in use. This was already an option for the DRb index
  setup.
* new switch on clwikiindex.rb to re-index a specific page from the cmd
  line -- mostly useful for debugging
* updates on recent index remove past incidents of the page, since we only
  need its most recent, of course.  
  
====1.13.6 

* fix for \r\n -> \n wasn't groovy on Ruby 1.6.8 or on FreeBSD -- not sure
  which it was. Disabled for non-Windows platforms.
* new clwiki.conf option - setting the rows and cols values for the edit
  form textarea.
* added an optional hits index. If the .conf file enables it, a new link
  appears at the bottom (getting crowded down there) title Stats, which
  goes to a Hit Count page. 

====1.13.5

* new build process -- files wuz bein' left out. Now build.rb works from
  install.rb to get the same files.

====1.13.4

* simpletable plug-in was changed to emit \n after each row for pretty(er)
  html output, but then the \n -> <br> conversion kicked in, so I then
  wrapped the whole <table> tags with <html> tags to prevent \n -> <br>
  conversion, but it also prevented WikiLink formatting. 
  
  So back to the way it was. No pretty \n after each row now, and no <html>
  tags.

====1.13.3

* <pre> text in 1.13.2 had extra line feeds, because the \n were xformed to 
  <br>\n, which results in two line feeds when rendered by Mozilla. 
  The change a few versions ago inside convert_newline_to_br which started
  converting \n to <br>\n is the culprit here. I did this for more readable 
  html, but that does screw up <pre> sections, so it's put back now. 

====1.13.2

* Fixed syntax bug when creating new subfolder with cvs enabled.

* Fixed redundant re-reading of files

* Fixed reading of diff data when not required (caused error on new subpage)

====1.13.1 

* Fixed plug-in for dot.rb, which required change to all plug-ins, to 
  accommodate receiving a reference to the ClWikiPage object.

* Added a readme for graphviz -- installer puts this directory and readme.txt
  in place.    
  
====1.13.0

* simpletable and GraphViz digraph rendering refactored to plug-in 
  structure. Two new plug-ins added -- [] and [/] now are shorthand for
  blockquote tags. [p] and [/p] are shorthand for blockquote/pre tags, and 
  the content is escaped automagically.

  (Fix in dev only - refactoring for plug-in formatters changed how 
  simpletable plug-in should work. Previously, it was called after \n were
  changed to <br>, now it's called before, and needs to split lines on \n,
  not on <br>)
  
* CVS Support added. The .conf file has this turned off by default. If
  enabled, your wiki repository must be a working directory from a cvs
  repository, and the cvs.exe must by on the path used by the web server.
  (For example, by default Apache uses the SYSTEM account, so changing the
  PATH variable won't get reset for SYSTEM without a reboot (or some fancier
  way of refreshing that I don't know of)).

  Included as a part of this support is a diff link just to the left of
  the updated timestamp. This currently dumps the raw cvs diff results
  on top of the normal page rendering.
  
  (Fix in dev version only -- diff content is now only obtained when 
  explicitly requested, not on every file read).
  
  (Fix in dev version only -- cvs log file now expanded to abs path to avoid
  problem with cvs log files showing up inside the wikirep subdirs)
  
* Fix with linefeeds in files. The content returned from a browser always
  had /r/n linefeeds. When saving on Windows, Ruby changes \n into \r\n
  automagically, so the resulting files had \r\r\n line feeds, which is 
  wrong and usually represents as two line feeds in most text editors. This
  is fixed. (any pages from a prior version will be automatically fixed
  on the next edit, but will also show as a major diff in the new cvs
  support). 

* Fixed escaped HTML!!! Any escaped html entered as page content would be
  lost on the next edit (unescaped back into actual html and oblivion).   
  
* Installer now includes dot.rb to render GraphViz dot files. It's not
  very flexible (and expects to be running on Windows), but it's a first
  shot. Requires separate GraphViz installation.
  
* dot.rb no longer has an absolute url path to dot.rb.  

====1.12.1

* Important fix in previous release which causes an index rebuild to hang on
  Windows due to excessive, unnecessary, unused (yeah, bad) TCP connections.
  clwikipage.rb was 'fixed' to avoid re-creating a ClWikiIndexClient for
  every potential global link word found in a page. But the fix then caused
  a separate ClWikiIndexClient to be created (thus creating an unused TCP
  connection) for every page loaded during an index rebuild. 
  
  The previous fix is still fixed, and the new bug fixed as well. All is
  groovy.

====1.12.0 

* Fixed bug in clwikipage.rb, in ClWikiPageFormatter, in the routine to do
  index searches for global linking in convertToLink. Every call created a new
  ClWikiIndexClient, which is a new TCP connection. Had a production case,
  with lots of global link searches that hung eventually. Now this code uses a
  ClWikiIndexClient instance created when the ClWikiPageFormatter is created
  and shared -- this eliminates this issue and the hanging problem went away.

* Global linking change. Previously, if a global link had multiple hits,
  the global link always went to the title search results page. Consider
  this case:

    //ThisPage/SubPage
    //ThisPage/SubPage/ChildPageOne
    //ThisPage/SubPage/ChildPageTwo

  If a page outside this hierarchy links to just SubPage, probably the
  author hoped it would link directly to //ThisPage/SubPage, not to the
  find results page showing SubPage and all of its children.**

  Now global linking will attempt to reduce all hits down to 'exact'
  matches. If only one exact match is found, then the global link goes
  direct to that page, otherwise it's business as usual.

  An exact match is defined as the term being an exact match (case
  insensitive) for the lowest page in the path. So in our above case,
  all of the children pages are eliminated.

  If the wiki contains these pages:

    //ThisPage/SubPage
    //OtherRoot/SubPage

  Then a link to just SubPage will still result in the find results window,
  as both of these are an 'exact' match.

  ** Note: you can still get this with a Title Search on the term.

* Fix: blogki.rss feed had no option to override the default cgifn, which
  in case of cLabs.org, don't workee. Now there's a new conf option called
  cgifn_from_rss, which allows you to optionally override the default and
  get rss embedded Wiki links to the correct url.

* Added publishTag * to auto-publish everything in the blogki view.

* Reload ? links in footer. Reload slightly changed, and ? link added.

  Previous global linking behavior: If the page was not local, a question
  mark link was always appended after the global link so the user can create
  the local page if the global link is not what was intended. But there's
  problems with this. If a user accidently clicked the local page link (?),
  then the new page will exist, and the global link will no longer be
  created, undoing the whole thing.

  Also, in most cases, the global link *was* the desired link, so having
  question mark links around all over the place, just waiting to create the
  undesirable scenario above is quite distracting.

  By default now, global links do not come with an appended ? link to make
  the local page. But, in the case that is desired, the user can click the
  ? link right after the Reload link in the page footer to reload the page
  with ? links appended right after each global link.

  The Reload link is changed to force the 'globaledits' param in the query
  string to false. This is because after clicking the ? reload link, the
  browser would retain the extra globaledits param by appending it to the
  original Reload link which didn't have this param at all.

====1.11.0
* Find page cleaned up. Instead of four separate text boxes for different
  search options, now there's only one text box with two checkboxes to
  set the options. Additional text added explaining the process.
* Added Email link to pages, which will launch an email with a link back
  to the page.
* FIX: 1.11.0 find clean up stranded older style query string type=..., this
  is supported again
* Added global page linking. If the local page is not found, but a title
  search on the Wiki name has hits, the page name is rendered with a link**,
  plus the usual ? mark link after the name to create the local page if
  that's what's desired.

  **If there's only one hit, the name link link's directly to that page.
  If there's more than one hit, the link goes to the title search
  results page.
* Added Find button on the Find page for the mouse slaves.
* FIX: (only in this dev timeframe), title search broken. Working again.
* Added optional Source page link, that links to the file source -- requires
  browser to have direct local access to file.
* clwikicgi.rb can once again be run from the command-line.
  ENV['Script_Name'] wasn't filled from cmd line, of course, which broke
  stuff. Now it's handled enough to allow cmd line processing again.
* Various changes to ward off 1.8 warnings regarding type/class and using
  strings with =~.
* Added code to strip off the drive name in expand_path results. 1.8
  now always makes sure the drive name exists in these calls (which makes
  sense). Expand_path is used for wiki pathing, and, of course, a drive
  letter makes no sense there.
* Page formatter now ensures the fullName fed it doesn't start with two
  slashes. Recent changes fed the formatter a fullName this way, and it
  didn't matter in 1.6.8, but with 1.8 it did and broke that page.
* setup -> set_up aliases in tests to support change in Test::Unit, now
  that it ships with 1.8.
* other test change to squash detection of test case classes without any
  test methods (in the TestBase class).
* Fixed problem when using local index (vs. drb) -- multiple instances
  of index client being created and causing problems accessing the .dat
  files simultaneously.

  NOTE: All 1.8 changes should be backward compatible with 1.6. Tests pass
  the same at the moment.

====1.10.0
* clwikiindex.rb now plays nice sending output to a file. It was hardcoded
  to send to stdout, but on my FreeBSD web host, this was fine as long as
  I kept my PuTTY session active. When that went away, so did the stdout
  pipe it had and kaboom.
* digraph now makes the inline image a hyperlink to show just the image.
* added blogki.rss.rb which shoots out an rss xml feed.
  (but, sends relative links to linked wiki pages, must be absolute)
* recent pages in clwiki now will make sure that if the block it yields to
  refuses the page, it won't count that page in the Top count -- this fixes a
  bug where if more than Top (30) unpublished pages were edited, no pages
  would show on the blogki.
* simpletable renderer now accepts attributes in the simpletable tag and
  passes them into the actual table tag.
* fixed bug in wiki index. If searching on 2 terms, and the first
  term returned no hits, the search returned all hits for the 2nd term only,
  instead of properly AND-ing them, returning no hits.
* unit tests working again, I'd been neglecting them. Turned off the
  'acceptance' tests (clwikitest.rb) -- way too much literal html
  validation going on.
* added in a specific Pages index to be used to determine if a page_exists?
  Requires new clIndex 1.1.0. Need to test on real machine to make sure
  it's just as fast as pinging the file system (I'd have to think it would
  be ...). (Well, it's not much faster on my fast w2k box at work, but it
  ain't slower).
* added config option to control use of index for determining if a page
  exists. Since this is still experimental, it needs to be easily controlled
  external of the code.
* fixed auto-forwarding bug. Relative links in the target page were
  incorrectly rendered in the scope of the forwarding page.
* refactored the 'custom' dot and <simpletable> rendering into their
  proper place inside ClWikiPage so that these renderings occur in the
  blogki view as well.

====1.9.4 (released 3/25/03)
* added <simpletable> custom renderer. (Need to refactor this and digraph
  out to plug-in structure). It's a bit rough and could probably be beefed
  up. (Each line is a row, multiple concurrent spaces or tabs count as a
  cell division).
* changed config file from xml back to Apache-ish style. Xml was overkill.
* reworked the template so it didn't use SSI directives
* refactored the code to read in the .conf file. It was stinky. Still is,
  but less so.
* Added in conf setting for the publish tag, to trigger Blogki
  to display a page. This is handy for having multiple blogs share the same
  Wiki repository, but have a unique tag for publishing to each Blogki view.
* refactored cgi display methods to all use template (though all except main
  display embed the header/footer portions in the body content for the moment).

====1.9.3
* better performance for plain ol' wiki Recent Changes page.
* distribution .zip now actually includes everything you need (probably)
* GMT is now not the default for clWiki Recent Changes. GMT is still the
  default for Blogki, and local still default for Blogki Editor
* simple install.rb now included

====1.9.2
* Added support for css file in config file. Add <cssHref> tag with href
  to .css file for Wiki to use.
* Starting support for presenting wiki in template. Works for main pages, but
  currently ignored for edit, find, replace...

